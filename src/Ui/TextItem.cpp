#include "./TextItem.h"

#include <QPainter>

//////////////////////////////////////////////////////////////////////////////////////////////////
TextItem::TextItem()
{
	_font = boost::make_shared<QFont>();
	_font->setPointSize(11);
	_font->setBold(false);
}

//////////////////////////////////////////////////////////////////////////////////////////////////
TextItem::~TextItem()
{
}

//////////////////////////////////////////////////////////////////////////////////////////////////
QSizeF TextItem::measureSize() const 
{
    qDebug() << "Measure size";

	QFontMetrics fm(*_font);

	// NOTE: flag Qt::TextSingleLine ignores newline characters.
	return fm.size(Qt::TextExpandTabs, QString::fromStdString(getText()));
}

//////////////////////////////////////////////////////////////////////////////////////////////////
void TextItem::setFont(const QFontPtr& font)
{
	_font = font;
}

//////////////////////////////////////////////////////////////////////////////////////////////////
void TextItem::draw(QPainter *painter, const QRectF& bounds) 
{
    qDebug() << "Draw item";
    
	painter->setBrush(QBrush(Qt::black));
	painter->setFont(*_font);
	painter->drawText(bounds, QString::fromStdString(getText()));
}